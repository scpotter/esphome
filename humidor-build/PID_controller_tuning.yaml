###############################################
# Accept HA input PID tuning
  ## OPTIONAL:
  # RECEIVE KP, KI and KD parameters from input_text.kx helpers in 
  # Home Assistant. See the PID controller below
  # These helper values will get saved to flash thus permanently over-riding 
  # the initial values set in the PID below.
number:
  # KP
  - platform: template
    name: kp
    icon: mdi:chart-bell-curve
    restore_value: true
    initial_value: 0.15
    min_value: 0
    max_value: 1
    step: 0.001
    optimistic: true
    set_action: 
      lambda: |- 
        id(console_thermostat).set_kp( x );

  # KI
  - platform: template
    name: ki
    icon: mdi:chart-bell-curve
    restore_value: true
    initial_value: 0.0015
    min_value: 0
    max_value: 1
    step: 0.0001
    optimistic: true
    set_action: 
      lambda: id(console_thermostat).set_ki( x );

  # KD
  - platform: template
    name: kd
    icon: mdi:chart-bell-curve
    restore_value: true
    initial_value: 0.0
    min_value: -50
    max_value: 50
    step: 0.001
    optimistic: true
    set_action: 
      lambda: id(console_thermostat).set_kd( x );

#### Removed deadband related parameters

  # Set threshold high
#  - platform: template
#    name: Deadband Threshold High
#    icon: mdi:chart-bell-curve
#    restore_value: true
#    initial_value: 0.4
#    min_value: 0
#    max_value: 20
#    step: 0.1
#    optimistic: true
#    set_action: 
#      lambda: id(console_thermostat).set_threshold_high( x );

  # Set threshold low
#  - platform: template
#    name: Deadband Threshold Low
#    icon: mdi:chart-bell-curve
#    restore_value: true
#    initial_value: -1.0
#    min_value: -20
#    max_value: 0
#    step: 0.1
#    optimistic: true
#    set_action: 
#      lambda: id(console_thermostat).set_threshold_low( x );

  # Set ki multiplier
#  - platform: template
#    name: Deadband ki Multiplier
#    icon: mdi:chart-bell-curve
#    restore_value: true
#    initial_value: 0.04
#    min_value: 0
#    max_value: .2
#    step: 0.01
#    optimistic: true
#    set_action: 
#      lambda: id(console_thermostat).set_ki_multiplier( x );